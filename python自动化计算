##程序背景：表格有F，Z，Q列的已知变量的值，用python自动算出X=ZsinQ ,当X>0时，L=X/（2*PI*F）当X<0时，C=1/（2*PI*F*X）
##实现思路：Q转化为sinQ，可以实现X的值自动转化，但C和L的值都一样，C列的值都应为负，L列的值都应为正，所以为区分开，想实现把C列的正值转化为0，L列的负值转化为0

import pandas as pd
import math

#将角度Q转化为三角函数sinQ的值
def angle_to_trig_value(angle, function):
    radian = angle * math.pi / 180
    if function =='sin':
        return math.sin(radian)
    elif function == 'cos':
        return math.cos(radian)
    elif function == 'tan':
        return math.tan(radian)

# 读取 Excel 文件
data = pd.read_excel('1.xlsx')

# 假设角度值在 表格的 Q 列
angle_column = data['Q']
# 计算正弦值
sin_values = [angle_to_trig_value(angle,'sin') for angle in angle_column]

# 假设要与表格的 'Z' 列进行乘法运算
value_column = data['Z']

# 正弦值与 'Z' 列乘法运算得到x=zsinQ
sin_multiplication = [sin_value * value for sin_value, value in zip(sin_values, value_column)]

# 判断正弦值的正负
sign_values= ['Positive' if value >= 0 else 'Negative' for value in sin_values]


def perform_operations(data):
# 根据正负计算结果
    results=[]
    for sine, sign, f_value in zip(sin_multiplication, sign_values, data['F']):
        if sign == 'Positive':
            results.append(sine /( 2* math.pi * f_value))
        else:
            results.append(1/(2* math.pi *f_value * sine))
    data['X'] = sin_multiplication
    data['C'] = results
    data['L'] = results
    #return data
########################################################################################
def replace_values(data):
    # 假设要处理的列为 'Column1' 和 'Column2'
    data['C1'] = data['C'].apply(lambda x: 0 if x > 0 else x)
    data['L1'] = data['L'].apply(lambda x: 0 if x < 0 else x)
    return data
#data['Cos_Multiplication'] = cos_multiplication
#data['Tan_Multiplication'] = tan_multiplication
######################################################################################
data = pd.read_excel('1.xlsx')
processed_data = perform_operations(data)
# 保存结果到新的 Excel 文件
data.to_excel('Over1.xlsx', index=False)
